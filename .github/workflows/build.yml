name: Build

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    name: ${{ matrix.compiler }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-22.04]
        compiler: [g++, clang++]

    env:
      CXX: ${{ matrix.compiler }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Build and test
      run: ./.jenkins

  ubuntu-ppa:
    name: Ubuntu PPA build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        sudo apt-get -qy install software-properties-common
        sudo add-apt-repository ppa:named-data/ppa -y
        sudo apt-get -qq update
        sudo apt-get -qy install libndn-cxx-dev
    - name: Build (debug)
      run: |
        ./waf --color=yes distclean
        ./waf --color=yes configure --debug
        ./waf --color=yes build
    - name: Build (release)
      run: |
        ./waf --color=yes distclean
        ./waf --color=yes configure --with-examples
        ./waf --color=yes build

  macos:
    name: Xcode ${{ matrix.xcode }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-11]
        xcode: ['12.4', '12.5', '13.2']
        include:
        - os: macos-12
          xcode: '13.4'

    steps:
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ matrix.xcode }}
    - name: Checkout
      uses: actions/checkout@v3
    - name: Build and test
      run: ./.jenkins
